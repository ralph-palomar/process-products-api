<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<munit:config name="process-products-api-test-suite.xml" />
	<http:request-config name="http-request-config-test" doc:name="HTTP Request configuration" doc:id="5dd8729b-b107-4755-b5e8-179df4f4520e" responseTimeout="60000">
		<http:request-connection host="localhost" port="${http.port}" />
	</http:request-config>
	<munit:test name="process-products-api-test-suite-post:\v1\products\new:process-products-api-configTest" doc:id="62dbdc19-041c-47ef-a57a-22cf0ac16953" description="Test">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="process-products-api-main" />
			<munit:enable-flow-source value="post:\v1\products\new:process-products-api-config" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when 'Get New Products'" doc:id="e1ba4694-b3c2-4cc0-aee1-12bbf399d7ea" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get New Products" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('scaffolder/responses/productInfo.list.example.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when 'Post New Products to Partner Vendor'" doc:id="91729cfe-a332-46fa-99d8-ec2818b1e909" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Post New Products to Partner Vendor" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[{}]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when 'Update Product Status'" doc:id="d30e3fe8-3e45-4b1d-b254-b0e109d49ac1" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Update Product Status" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('scaffolder/responses/productStatus.update.json')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<http:request method="POST" doc:name="Request" doc:id="8dbbeafa-5716-446a-9275-3f6df4f540f7" config-ref="http-request-config-test" path="/api/v1/products/new"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="cda6162f-721a-4413-84be-ef1b76bd9ca3" actual="#[payload.processed]" expected="#[true]" message="This is not the expected response."/>
		</munit:validation>
	</munit:test>


</mule>
